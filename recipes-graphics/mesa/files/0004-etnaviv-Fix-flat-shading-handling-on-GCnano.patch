From c3e98e4fd85131a6c3e253567b49dd47250887d8 Mon Sep 17 00:00:00 2001
From: Marek Vasut <marex@denx.de>
Date: Mon, 18 Nov 2019 20:22:06 +0100
Subject: [PATCH 4/4] etnaviv: Fix flat shading handling on GCnano

The GCnano blob only ever sets PA.SHADER_ATTRIBUTES to 0x2f1 in case the
varying is of type VARYING_SLOT_PNTC . Furthermore, the blob never ever
enables SHADE_MODEL=FLAT and only ever uses SHADE_MODEL=SMOOTH . This is
likely due to the GC400T/GCnano hardware being limited to OpenGL 1.4 and
OpenGL/ES 2.0 .

Signed-off-by: Marek Vasut <marex@denx.de>
---
 .../drivers/etnaviv/etnaviv_compiler_nir.c    | 21 +++++++++++++++----
 .../drivers/etnaviv/etnaviv_internal.h        |  2 ++
 .../drivers/etnaviv/etnaviv_rasterizer.c      |  8 ++++++-
 src/gallium/drivers/etnaviv/etnaviv_screen.c  |  4 +++-
 4 files changed, 29 insertions(+), 6 deletions(-)

diff --git a/src/gallium/drivers/etnaviv/etnaviv_compiler_nir.c b/src/gallium/drivers/etnaviv/etnaviv_compiler_nir.c
index 1210c2f1fdb..9b19387e96f 100644
--- a/src/gallium/drivers/etnaviv/etnaviv_compiler_nir.c
+++ b/src/gallium/drivers/etnaviv/etnaviv_compiler_nir.c
@@ -966,10 +966,23 @@ etna_link_shader_nir(struct etna_shader_link_info *info,
       varying = &info->varyings[fsio->reg - 1];
       varying->num_components = fsio->num_components;
 
-      if (!interpolate_always) /* colors affected by flat shading */
-         varying->pa_attributes = 0x200;
-      else /* texture coord or other bypasses flat shading */
-         varying->pa_attributes = 0x2f1;
+      if (fs->shader->specs->use_flat_shading_pntc_only) {
+         /*
+          * On GC400T/GCnano, the blob only ever sets PA_SHADER_ATTRIBUTES to
+	  * 0x2f1 in case of PNTC, anything else uses PA_SHADER_ATTRIBUTES set
+	  * to 0x200. Setting this otherwise leads to texture corruption. Also
+	  * see related PA_CONFIG SHADE_MODEL=FLAT in etnaviv_rasterizer.c
+	  */
+         if (fsio->slot == VARYING_SLOT_PNTC)
+            varying->pa_attributes = 0x2f1;
+	 else
+            varying->pa_attributes = 0x200;
+      } else {
+         if (!interpolate_always) /* colors affected by flat shading */
+            varying->pa_attributes = 0x200;
+         else /* texture coord or other bypasses flat shading */
+            varying->pa_attributes = 0x2f1;
+      }
 
       varying->use[0] = VARYING_COMPONENT_USE_UNUSED;
       varying->use[1] = VARYING_COMPONENT_USE_UNUSED;
diff --git a/src/gallium/drivers/etnaviv/etnaviv_internal.h b/src/gallium/drivers/etnaviv/etnaviv_internal.h
index 22f6d2cd9fa..89937813cc3 100644
--- a/src/gallium/drivers/etnaviv/etnaviv_internal.h
+++ b/src/gallium/drivers/etnaviv/etnaviv_internal.h
@@ -91,6 +91,8 @@ struct etna_specs {
    unsigned use_blt : 1;
    /* can use any kind of wrapping mode on npot textures */
    unsigned npot_tex_any_wrap : 1;
+   /* use flat shading bypass only for PNTC */
+   unsigned use_flat_shading_pntc_only : 1;
    /* number of bits per TS tile */
    unsigned bits_per_tile;
    /* clear value for TS (dependent on bits_per_tile) */
diff --git a/src/gallium/drivers/etnaviv/etnaviv_rasterizer.c b/src/gallium/drivers/etnaviv/etnaviv_rasterizer.c
index 2f218d6c063..b73d5f3a188 100644
--- a/src/gallium/drivers/etnaviv/etnaviv_rasterizer.c
+++ b/src/gallium/drivers/etnaviv/etnaviv_rasterizer.c
@@ -47,7 +47,13 @@ etna_rasterizer_state_create(struct pipe_context *pctx,
 
    cs->base = *so;
 
-   cs->PA_CONFIG = (so->flatshade ? VIVS_PA_CONFIG_SHADE_MODEL_FLAT : VIVS_PA_CONFIG_SHADE_MODEL_SMOOTH) |
+   /*
+    * On GC400T/GCnano, the blob never enables PA_CONFIG SHADE_MODEL=FLAT.
+    * In fact, enabling it and setting PA_SHADER_ATTRIBUTES to 0x2f1 causes
+    * significant texture corruption on such hardware.
+    */
+   cs->PA_CONFIG = ((!ctx->screen->specs.use_flat_shading_pntc_only && so->flatshade) ?
+                    VIVS_PA_CONFIG_SHADE_MODEL_FLAT : VIVS_PA_CONFIG_SHADE_MODEL_SMOOTH) |
                    translate_cull_face(so->cull_face, so->front_ccw) |
                    translate_polygon_mode(so->fill_front) |
                    COND(so->point_quad_rasterization, VIVS_PA_CONFIG_POINT_SPRITE_ENABLE) |
diff --git a/src/gallium/drivers/etnaviv/etnaviv_screen.c b/src/gallium/drivers/etnaviv/etnaviv_screen.c
index 51154a3df11..230701a0cb7 100644
--- a/src/gallium/drivers/etnaviv/etnaviv_screen.c
+++ b/src/gallium/drivers/etnaviv/etnaviv_screen.c
@@ -736,8 +736,10 @@ etna_get_specs(struct etna_screen *screen)
    screen->specs.fragment_sampler_count = 8;
    screen->specs.vertex_sampler_count = 4;
 
-   if (screen->model == 0x400)
+   if (screen->model == 0x400) {
       screen->specs.vertex_sampler_count = 0;
+      screen->specs.use_flat_shading_pntc_only = true;
+   }
 
    screen->specs.vs_need_z_div =
       screen->model < 0x1000 && screen->model != 0x880;
-- 
2.24.1

